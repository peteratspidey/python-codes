#opening a file with given path for read purpose and read it line by line
x= open ("/home/spidey/Downloads/1ltx.pdb", "r" ).readlines()

#ATOM     15  CG  LEU A  25      60.022  46.418  47.611  1.00 69.97           C

#creating a output file for write purpose
outfile = open("outputfile.txt", "w")

#initialise the count of atoms as zero
count_of_C = 0 
count_of_S = 0 
count_of_O = 0 
count_of_N = 0 

# initialise the mass of atoms as zero
mass_of_N = 0
mass_of_S = 0
mass_of_C = 0
mass_of_O = 0

# starting a loop till range i.e. length of the file lines
for i in range(len(x)):
	line = x[i].strip() #striping for new line charachter repeatation
	outfile.write(line+ "\n") #writing in output file after removal of additional new line charachter
	if (line[:4]) == "ATOM": #checking if lines 0-4 match the charachter ATOM
		if line [77] == "C": #checking if line 77 contains C
			count_of_C +=1 #then add count to count_of_C
			mass_of_C = mass_of_C + 12 #add mass_of_C
		elif line [77] == "O": #checking if line 77 contains O
			count_of_O +=1 #then add count to count_of_O
			mass_of_O = mass_of_O + 16 #add mass_of_O
		elif line [77] == "S": #checking if line 77 contains S
			count_of_S +=1 #then add count to count_of_S
			mass_of_S = mass_of_S + 32 #add mass_of_S
		elif line [77] == "N": #checking if line 77 contains N
			count_of_N +=1 #then add count to count_of_N
			mass_of_N = mass_of_N + 14 #add mass_of_N
			
#calculate total no of atoms
total_no_of_atoms = count_of_C + count_of_O + count_of_S + count_of_N

#calculate total mass of protein
mass_of_protein = mass_of_N + mass_of_S + mass_of_C + mass_of_O

#print the counts
print(f" C: {count_of_C} ,\n O :{count_of_O},\n S: {count_of_S},\n N: {count_of_N}")

#print the total atoms and total mass
print (f" total atoms : {total_no_of_atoms},\n mass:{mass_of_protein} Da")	


# give the radius values by self		
radius_of_C = 1.70  # Carbon
radius_of_S = 1.80  # Sulfur
radius_of_O = 1.52  # Oxygen
radius_of_N = 1.55  # Nitrogen

#calculate volume of each atom by simple formula (4/3*pi*r³)
volume_of_C = (4/3 * 22/7 * radius_of_C**3) * count_of_C
volume_of_S = (4/3 * 22/7 * radius_of_S**3) * count_of_S
volume_of_O = (4/3 * 22/7 * radius_of_O**3) * count_of_O
volume_of_N = (4/3 * 22/7 * radius_of_N**3) * count_of_N


#print the volume of CSNO 
print(f"vol_C: {volume_of_C} Å,\n vol_O: {volume_of_O} Å,\n vol_S: {volume_of_S} Å,\n vol_N: {volume_of_N} Å")

#calculate total volume
total_volume  = (volume_of_C + volume_of_O + volume_of_S + volume_of_N )

#print total volume
print (f" total_vol:{total_volume} Å") 

charge_on_protein = 0
for i in range(len(x)):
	line = x[i].strip()
	if line [17:20] == "LYS" :
		charge_on_protein +=1
	elif line [17:20] == "ARG" :
		charge_on_protein +=1
	elif line [17:20] == "ASP":
		charge_on_protein -=1
	elif line [17:20] == "GLU":
		charge_on_protein -=1
	elif line[17:20] == "HIS": #histidine as taken 0.2 because its charge depend on the ph of the protein crystal i.e. 7.2 in case of 1ltx.pdb (+1 for ph<6 , 0.1 or 0.2 for ph ~ 7.0 ,0 for ph < 6 
		charge_on_protein +=0.2
		#print (len(line[17:20]))
print(f"total charge on protein : {charge_on_protein}")

water= 0
lengthA = 0
for i in range(len(x)):
	line = x[i].strip()
	if line[17:20] == "HOH":
		water +=1
	elif (not line[16:20].startswith("HOH") and
	not any (char.isdigit() for char in line[16:20]) and
	" " not in line[16:20] ): 
		lengthA +=1
print(lengthA)
print(f"water : {water}")	
#print (length_A)
#close the file
outfile.close()
